(()=>{var t={338:()=>{Vue.component("cart",{data:()=>({cartUrl:"/api/cart",imgFolder:"img/",cartItems:[],totalPrice:0}),mounted(){this.$root.mycart.reqData(this.cartUrl).then((t=>{for(let e of t)this.cartItems.push(e);this.updateView()}))},methods:{updateView(){this.$root.mycart.countCartItem=this.cartItems.length,this.totalPrice=this.getTotalPrice()},getTotalPrice(){return this.cartItems.reduce(((t,e)=>t+e.quantity*e.price),0)},remove(t){this.$root.mycart.remove(this.cartItems,t),this.updateView()},clear(){this.cartItems=[],this.updateView()}},template:'\n    <div class="cart__list-wrapper">\n        <ul class="cart__list">\n            <cart-item v-for="item of cartItems" :key="item.id" :cart-item="item">\n            </cart-item>       \n        </ul>\n        <div class="cart__control-wrapper">\n            <button class="cart__button-clear cart__button" @click="clear()">Clear shopping cart</button>\n            <a class="cart__button-continue cart__button" href="./catalog.html">Continue shopping</a>\n        </div>\n    </div> \n    '}),Vue.component("cart-item",{props:["cartItem"],template:'\n    <li class="cart__item">\n        <img class="cart__item-image" :src="$parent.imgFolder + cartItem.img" :alt="cartItem.img" width="262" height="306">\n        <div class="cart__item-description">\n            <img class="cart__item-button-close" src="./img/close.svg" alt="close" @click="$parent.remove(cartItem)">            \n            <p class="cart__item-tittle">{{cartItem.name}}</p>\n            <p class="cart__item-price">Price: <span class="cart__item-price_color_pink">{{cartItem.price * cartItem.quantity}} $</span>\n            </p>\n            <p class="cart__item-param">Quantity:<input\n                    class="cart__item-quantity" type="text" :value="cartItem.quantity">\n            </p>\n        </div>\n    </li>\n    '}),Vue.component("cart-total",{template:'\n    <div class="cart__proceed-wrapper">\n        <p class="cart__proceed-sub">sub total<span class="cart__proceed-cashSub">{{$root.$refs.cart.totalPrice}} $</span></p>\n        <p class="cart__proceed-total">grand total<span class="cart__proceed-cashTotal">$9999999</span>\n        </p>\n        <hr class="cart__proceed-hline">\n        <button class="cart__proceed-button" type="button">proceed to checkout</button>\n    </div>\n    '})},388:()=>{Vue.component("error",{data:()=>({text:""}),computed:{isVisible(){return""!==this.text}},template:'\n    <div class="error-block" v-if="isVisible">\n        <p class="error-msg">\n        <button class="close-btn" @click="text=\'\'">&times;</button>\n        {{ text }}\n</p>\n</div>\n    '})},832:()=>{Vue.component("filter-el",{data:()=>({userSearch:""}),template:'\n        <a class="header__loupe-link" href="#">\n            <svg class="header__loupe-svg" width="33" height="33">\n                <use xlink:href="./img/loupe.svg#loupe"></use>\n            </svg>\n            <input class="header__find" type="search" v-model="userSearch" @input="$root.$refs.products.filter(userSearch)">\n        </a>\n    '})},988:()=>{Vue.component("products",{data:()=>({catalogUrl:"/api/products",imgFolder:"img/",filtered:[],products:[]}),mounted(){this.$root.mycart.reqData(this.catalogUrl).then((t=>{for(let e of t)this.products.push(e),this.filtered.push(e)}))},methods:{filter(t){let e=new RegExp(t,"i");this.filtered=this.products.filter((t=>e.test(t.name)))}},template:' <ul class="product__list">\n                    <product v-for="item of filtered" :key="item.id" :product="item">\n                    </product>\n               </ul>'}),Vue.component("product",{props:["product"],methods:{showProduct(){window.open("product.html","_self")}},template:'\n    <li class="product-card">\n        <div class="product-card__image-wrapper">\n            <img v-bind:src="$parent.imgFolder + product.img" v-bind:alt="product.img">\n            <button class="product-card__button" type="button" @click="$root.mycart.addProduct(product)">\n                <img src="./img/basket.svg" alt="basket">\n                Add to chart\n            </button>\n        </div>\n        <div class="product-card__description" @click="showProduct()">\n            <h3 class="product-card__tittle">{{product.name}}</h3>\n            <p class="product-card__subtittle">{{product.descr}}</p>\n            <p class="product-card__price">{{product.price}}</p>\n        </div>\n    </li>\n'})},666:()=>{const t=document.querySelector(".header__button-menu"),e=document.querySelector(".ppmnu"),r=document.querySelector(".ppmnu__btn-cls");t.addEventListener("click",(function(t){e.style.display="block"}),!1),r.addEventListener("click",(function(t){e.style.display="none"}),!1)},703:()=>{Vue.component("cart_view",{template:'       \n        <a class="header__basket" href="./cart.html">\n            <span class="header__basket-count">\n                {{$root.mycart.countCartItem}}\n            </span>\n        </a> \n    '})},302:()=>{new Vue({el:"#app",data:{mycart:new class{constructor(){this.countCartItem=0}reqData(t,e,r){const a={method:e||"GET",headers:{"Content-Type":"application/json"}};return(r=r||null)&&(a.body=JSON.stringify(r)),fetch(t,a).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))}countProduct(){this.reqData("/api/cart").then((t=>{this.countCartItem=t.length}))}addProduct(t){const e=Object.assign({quantity:1},t);this.reqData("/api/cart","POST",e).then((t=>{1===t.result&&this.countProduct()}))}remove(t,e){this.reqData("/api/cart","DELETE",e).then((r=>{1===r.result&&(t.splice(t.indexOf(e),1),this.countCartItem=t.length)}))}}},methods:{},mounted(){this.mycart.countProduct()}})}},e={};function r(a){var c=e[a];if(void 0!==c)return c.exports;var n=e[a]={exports:{}};return t[a](n,n.exports,r),n.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var a in e)r.o(e,a)&&!r.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";r(388),r(703),r(832),r(988),r(338),r(302),r(666)})()})();